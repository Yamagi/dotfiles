# Do not print the exit value
# while executing this file
unset printexitvalue

# Do not printing timings
# while executing this file
unset set time

# --------------------------------------------------------------------- #

# Stop ssh-agent if it's running
# and was started by this session
if ( $?SSH_AGENT_THIS) then
	if ( $?SSH_AGENT_PID ) then

		# Delete all keys
		ssh-add -D >& /dev/null

		# Kill the daemon
		kill $SSH_AGENT_PID

		# Clean the environment
		unset SSH_AGENT_PID
		unset SSH_AUTH_SOCK
	endif
endif

# --------------------------------------------------------------------- #

# Stop MusicPD
switch ( "$OSTYPE" )

case "FreeBSD":

	set mpdbin = musicpd
	set mpdpath = /usr/local/bin

	breaksw

case "linux":

	set mpdbin = mpd
	set mpdpath = /usr/bin

	breaksw

endsw

if ( $?MUSICPD ) then
	if (!("$?TERM" == "screen")) then
		/usr/bin/pgrep $mpdbin > /dev/null

		if ( $? == 0 ) then
			$mpdpath/$mpdbin --kill
		endif
	endif
endif

# --------------------------------------------------------------------- #

# Create a backup of the history and dirstack.
# But only if the last backup is older than
# 60 seconds. This prevents races. Backups are
# deleted after 30 days.

set date=`/bin/date "+%Y%m%d%H%M%S"`
set this_date=`/bin/date "+%s"`

if ( -s ~/.tcsh/run/last_backup) then
	set last_date=`cat ~/.tcsh/run/last_backup`
else
	set last_date=(${this_date} - 60)
endif

if (${this_date} > (${last_date} + 59)) then
	echo ${this_date} > ~/.tcsh/run/last_backup

	cp ${histfile} ${histfile}_${date}
	cp ${dirsfile} ${dirsfile}_${date}

	/usr/bin/find ~/.tcsh/run/ -name "history_*" -mtime +30d -exec rm {} \;
	/usr/bin/find ~/.tcsh/run/ -name "dirstack_*" -mtime +30d -exec rm {} \;
endif

# --------------------------------------------------------------------- #

# Sync filesystems
/bin/sync

# --------------------------------------------------------------------- #

# Reenable printing the
# exitvalue
set printexitvalue

# Reenable printing
# of the timing
set time=5

