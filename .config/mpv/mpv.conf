# mpv.conf for high qualiyt playback. It requires an
# somewhat up to date GPU with full Vulkan support.
# For video resolutions over 1080p the GPU must be
# rather powerfull, e.g. most older iGPUs are too
# slow.
#
# Tips to speed things up:
#  * Don't apply the 'high-quality' profile. This
#    alone reduces the GPU load a lot, especially
#    for video resolutions above 1080p.
#  * If that isn't enough, apply the 'fast' profile.
#  * Use 'vo=gpu' and 'gpu-api=gpu' for older GPUs
#    without (any|full|good) Vulkan support. This is
#    incompatible with 'vd-lavc-film-grain=gpu', but
#    those old systems aren't fast enough for codecs
#    requiring grain synthesis anyways. At least not
#    in higher videos resolutions.
#  * Modern codecs like AV1 or VVC have a tendency
#    for spikes, e.g. a small amount of frames needs
#    way more CPU power to decode than the average
#    frame. On slower CPUs this leads to stuttering.
#    The decoder misses the time window for theses
#    more complex frames and frames must be dropped
#    to keep audio synchronization. Using a decoder
#    queue caching decoded frames can work wonders,
#    at the expense of a way higher memory usage:
#      vd-queue-enable=yes
#      vd-queue-max-bytes=6GiB
#      vd-queue-max-samples=1048576
#      vd-queue-max-secs=30

# ----

# Global options.

# Caching:
#  * Read 30 seconds ahead, store...
#  * ...up to 256M future...
#  * ...and up to 128M past data.
# This isn't really necessary on fast machines, but
# helps on old hardware with slow storage and some
# non-realtime network stream. In any case chaching
# doesn't hurt.
cache=yes
demuxer-max-bytes=256MiB
demuxer-max-back-bytes=128MiB
demuxer-readahead-secs=30

# Use hardware acceleration if available. Only
# officially supported codecs (safe) any only
# codecs which copy the decoded frames back into
# system memory for further processing (copy).
hwdec=auto-copy-save

# Framerate interpolation, matches X video frames with
# Y display frames. The video stream is resampled onto
# an oversampled, linear timescale.
interpolation
tscale=oversample
video-sync=display-resample

# Stay above all other windows.
ontop

# The high quality rendering profile as default. It's
# way better than the default profile but requires some
# amount of CPU power.
profile=high-quality

# Place subtitles in black borders, when available.
# Only applied to plain text subtitles, not to ASS.
sub-use-margins

# Save playback position on exit. It's restored when
# the file is played again. The state files are stored
# in ~/.config/mpv/watch_later/. 
save-position-on-quit=yes

# Some newer codecs, most noteably AV1, feature grain
# simulation. The grain is removed at encoding time to
# save bandwidth and added back at decoding time. It
# can be rendered on the GPU for massive performance
# gains. Requires the new GPU renderer with Vulkan
# backend.
vd-lavc-film-grain=gpu

# Use the new GPU renderer with it's Vulkan backend.
# Requires a somewhat up to date Vulkan implementation.
# Way faster than the old GPU renderer and the OpenGL
# backend.
vo=gpu-next
gpu-api=vulkan

# ----

# Auto profiles

# Resample Files with 50 FPS to more reasonable 25 FPS.
# Files with 50 FPS are almost always PAL interlaced or
# PAL with wrong deinsterlaced applied and are still
# somewhat common in parts of europe. For example the
# "Mediatheken" of the german public broadcasters have
# a lot 50 FPS interlaced files, even up to 1080p. Try
# to detect them and apply s pulldown to more reasonable
# 25 FPS. That makes them look more natural and less
# "soapy" and it also helps with 4k displays connected
# through HDMI 1.4. Since the container may bot be 100%
# correct apply some skew to the detection.
[50fps->25fps]
profile-cond=container_fps >= 49 and container_fps <= 51
profile-desc=50 FPS -> 25 FPS pulldown
profile-restore=copy
hwdec=no
vf-pre=lavfi="fps=25"

# The same for files with 60 FPS. There are the same, but
# for NTSC sources. At least in europa such files are very
# uncommon, nevertheless add a profile for completeness
# sake.
[60fps->30fps]
profile-cond=container_fps >= 59 and container_fps <= 61
profile-desc=60 FPS -> 30 FPS pulldown
profile-restore=copy
hwdec=no
vf-pre=lavfi="fps=30"

# ----

# Manual profiles

# Apply AMD FidelityFX shaders to scaled outputs.
# Requires a somewhat up to date GPU with power.
# Taken from: https://gist.github.com/agyild
[fidelityfx]
glsl-shaders-add=~~/shaders/FSR.glsl
glsl-shaders-add=~~/shaders/CAS-scaled.glsl
glsl-shaders-add=~~/shaders/CAS.glsl
